<!DOCTYPE html>
<html lang="en">

  <head>
    <meta charset="utf-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <%= Metatags.print_tags(@conn) %>
    <% canonical_url = AlewordfireWeb.Router.Helpers.url(@conn) <> (@conn.assigns[:canonical_path] || @conn.request_path) %>
    <link rel="canonical" href="<%= canonical_url %>" />
    <link rel="preload" href="https://fontlibrary.org/face/tex-gyre-adventor" as="style" onload="this.onload=null;this.rel='stylesheet'">
    <noscript><link rel="stylesheet" href="https://fontlibrary.org/face/tex-gyre-adventor"></noscript>
    <link rel="stylesheet" href="<%= Routes.static_path(@conn, "/css/app.css") %>"/>
    <link rel="shortcut icon" href="<%= Routes.static_path(@conn, "/images/favicon.ico") %>"/>
    <link rel="apple-touch-icon" sizes="57x57" href="<%= Routes.static_path(@conn, "/images/apple-icon-57x57.png") %>"/>
    <link rel="apple-touch-icon" sizes="60x60" href="<%= Routes.static_path(@conn, "/images/apple-icon-60x60.png") %>"/>
    <link rel="apple-touch-icon" sizes="72x72" href="<%= Routes.static_path(@conn, "/images/apple-icon-72x72.png") %>"/>
    <link rel="apple-touch-icon" sizes="76x76" href="<%= Routes.static_path(@conn, "/images/apple-icon-76x76.png") %>"/>
    <link rel="apple-touch-icon" sizes="114x114" href="<%= Routes.static_path(@conn, "/images/apple-icon-114x114.png")
      %>"/>
    <link rel="apple-touch-icon" sizes="120x120" href="<%= Routes.static_path(@conn, "/images/apple-icon-120x120.png")
      %>"/>
    <link rel="apple-touch-icon" sizes="144x144" href="<%= Routes.static_path(@conn, "/images/apple-icon-144x144.png")
      %>"/>
    <link rel="apple-touch-icon" sizes="152x152" href="<%= Routes.static_path(@conn, "/images/apple-icon-152x152.png")
      %>"/>
    <link rel="apple-touch-icon" sizes="180x180" href="<%= Routes.static_path(@conn, "/images/apple-icon-180x180.png")
      %>"/>
    <link rel="icon" type="image/png" sizes="192x192" href="<%= Routes.static_path(@conn, "/images/android-icon-192x192.png")
      %>"/>
    <link rel="icon" type="image/png" sizes="32x32" href="<%= Routes.static_path(@conn, "/images/favicon-32x32.png") %>"/>
    <link rel="icon" type="image/png" sizes="96x96" href="<%= Routes.static_path(@conn, "/images/favicon-96x96.png") %>"/>
    <link rel="icon" type="image/png" sizes="16x16" href="<%= Routes.static_path(@conn, "/images/favicon-16x16.png") %>"/>
  </head>

  <body>
    <header>
      <%= render_shared "navbar.html", conn: @conn %>
      <%= render_shared "hero.html", conn: @conn %>
    </header>

    <main role="main" class="columns">
      <p class="alert alert-info" role="alert">
        <%= get_flash(@conn, :info) %>
      </p>
      <p class="alert alert-danger" role="alert">
        <%= get_flash(@conn, :error) %>
      </p>
      <%= render @view_module, @view_template, assigns %>
    </main>

    <footer class="footer">
      <div class="container">
        <div class="content has-text-centered">
          <p>
            <a class="icon" href="//github.com/jenil/bulmaswatch" target="_blank" onclick="ga('send', 'event', 'footer', 'click', 'github');">
              <i class="fab fa-github"></i>
            </a>
            &nbsp;
            <a class="icon" href="//t.me/yknx4" target="_blank" onclick="ga('send', 'event', 'footer', 'click', 'twitter');">
              <i class="fab fa-telegram"></i>
            </a>
          </p>
          <p>
            2018 - <strong>AleWorld</strong> by
            <a href="//github.com/yknx4" target="_blank">Ale Ornelas</a>
          </p>
        </div>
      </div>
    </footer>
    <script type="text/javascript" src="<%= Routes.static_path(@conn, "/js/app.js") %>" ></script>
    <script defer src="https://use.fontawesome.com/releases/v5.6.3/js/all.js" integrity="sha384-EIHISlAOj4zgYieurP0SdoiBYfGJKkgWedPHH4jCzpCXLmzVsw1ouK59MuUtP4a1" crossorigin="anonymous"></script>
    <script type="text/javascript">
      /*! loadCSS. [c]2017 Filament Group, Inc. MIT License */
/* This file is meant as a standalone workflow for
- testing support for link[rel=preload]
- enabling async CSS loading in browsers that do not support rel=preload
- applying rel preload css once loaded, whether supported or not.
*/
(function( w ){
	"use strict";
	// rel=preload support test
	if( !w.loadCSS ){
		w.loadCSS = function(){};
	}
	// define on the loadCSS obj
	var rp = loadCSS.relpreload = {};
	// rel=preload feature support test
	// runs once and returns a function for compat purposes
	rp.support = (function(){
		var ret;
		try {
			ret = w.document.createElement( "link" ).relList.supports( "preload" );
		} catch (e) {
			ret = false;
		}
		return function(){
			return ret;
		};
	})();

	// if preload isn't supported, get an asynchronous load by using a non-matching media attribute
	// then change that media back to its intended value on load
	rp.bindMediaToggle = function( link ){
		// remember existing media attr for ultimate state, or default to 'all'
		var finalMedia = link.media || "all";

		function enableStylesheet(){
			// unbind listeners
			if( link.addEventListener ){
				link.removeEventListener( "load", enableStylesheet );
			} else if( link.attachEvent ){
				link.detachEvent( "onload", enableStylesheet );
			}
			link.setAttribute( "onload", null ); 
			link.media = finalMedia;
		}

		// bind load handlers to enable media
		if( link.addEventListener ){
			link.addEventListener( "load", enableStylesheet );
		} else if( link.attachEvent ){
			link.attachEvent( "onload", enableStylesheet );
		}

		// Set rel and non-applicable media type to start an async request
		// note: timeout allows this to happen async to let rendering continue in IE
		setTimeout(function(){
			link.rel = "stylesheet";
			link.media = "only x";
		});
		// also enable media after 3 seconds,
		// which will catch very old browsers (android 2.x, old firefox) that don't support onload on link
		setTimeout( enableStylesheet, 3000 );
	};

	// loop through link elements in DOM
	rp.poly = function(){
		// double check this to prevent external calls from running
		if( rp.support() ){
			return;
		}
		var links = w.document.getElementsByTagName( "link" );
		for( var i = 0; i < links.length; i++ ){
			var link = links[ i ];
			// qualify links to those with rel=preload and as=style attrs
			if( link.rel === "preload" && link.getAttribute( "as" ) === "style" && !link.getAttribute( "data-loadcss" ) ){
				// prevent rerunning on link
				link.setAttribute( "data-loadcss", true );
				// bind listeners to toggle media back
				rp.bindMediaToggle( link );
			}
		}
	};

	// if unsupported, run the polyfill
	if( !rp.support() ){
		// run once at least
		rp.poly();

		// rerun poly on an interval until onload
		var run = w.setInterval( rp.poly, 500 );
		if( w.addEventListener ){
			w.addEventListener( "load", function(){
				rp.poly();
				w.clearInterval( run );
			} );
		} else if( w.attachEvent ){
			w.attachEvent( "onload", function(){
				rp.poly();
				w.clearInterval( run );
			} );
		}
	}


	// commonjs
	if( typeof exports !== "undefined" ){
		exports.loadCSS = loadCSS;
	}
	else {
		w.loadCSS = loadCSS;
	}
}( typeof global !== "undefined" ? global : this ) );
    </script>
  </body>

</html>
